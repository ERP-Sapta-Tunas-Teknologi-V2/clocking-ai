### Database Context for LLM:

This database contains information about users, projects, daily activities, clocking activities, and their relationships. Here’s how each part works:

1. **Enums**:
    - **`daily_activities_priority_enum`**: Represents the priority level of a daily activity. The possible values are:
        - **High**: High priority
        - **Medium**: Medium priority
        - **Low**: Low priority
    - **`daily_activities_activity_type_enum`**: Describes the type of activity. The values are:
        - **Office**: Activity done in the office
        - **Onsite**: Activity done at a client’s location
        - **Remote**: Activity done remotely (e.g., work-from-home)
    - **`projects_status_enum`**: Represents the status of a project. The possible values are:
        - **initial**: Project is in the planning phase
        - **progress**: Project is currently being worked on
        - **finished**: Project has been completed
        - **cancelled**: Project has been cancelled

2. **Tables and Relationships**:

    - **`users`**: Stores information about users who are part of the company. This includes:
        - `user_id`: Unique identifier for each user.
        - `user_key`: A key to uniquely identify the user.
        - `full_name`: The user’s full name.
        - `email`: The user’s email address.
        - `position`: The user’s position within the company.
        - `created_at`, `updated_at`: Timestamps for when the user was created and last updated.

    - **`category_clocking`**: Contains the types of clocking categories for activities. Each category has:
        - `category_id`: Unique identifier for each category.
        - `category_description`: A description of the category.
        - `is_productive`, `is_billable`, `is_used`: Flags indicating whether the category is productive, billable, and used in the system.

    - **`daily_activities`**: Tracks the daily activities for users. Key fields include:
        - `daily_activity_id`: Unique identifier for the daily activity.
        - `project_code`: Links the activity to a project.
        - `activity_date`: The date the activity took place.
        - `priority`: The priority of the activity.
        - `activity_type`: The type of activity (e.g., office, onsite, remote).
        - `description`: A description of the activity.
        - `activity_duration_minutes`: The total duration of the activity in minutes.
        - `user_id`: Links the activity to the user who performed it.

    - **`clocking_activities`**: Stores detailed information about each clocking activity for a user:
        - `activity_id`: Unique identifier for each clocking activity.
        - `daily_activity_id`: Links the clocking activity to a daily activity.
        - `task_id`: Identifies the specific task being clocked.
        - `activity_description`: Description of the task or activity.
        - `duration_minutes`: Duration of the activity in minutes.
        - `start_date`, `start_time`: When the activity started.
        - `end_date`, `end_time`: When the activity ended.
        - `category_id`: Links the activity to a clocking category.

    - **`projects`**: Contains details about projects. Key fields include:
        - `project_code`: Unique identifier for the project.
        - `project_name`: Name of the project.
        - `customer_name`: The client for the project.
        - `project_manager_id`: The user assigned as the project manager.
        - `status`: The status of the project (e.g., initial, progress, finished, cancelled).

    - **`project_users`**: Links users to projects. This table is necessary for associating users with specific projects:
        - `project_code`: Links the user to a specific project.
        - `user_id`: The user assigned to the project.

3. **Foreign Key Relationships**:
    - Each **`daily_activity`** is linked to a **`user`** via `user_id`.
    - Each **`clocking_activity`** is linked to a **`daily_activity`** via `daily_activity_id`, and to a **`category_clocking`** via `category_id`.
    - Each **`project_user`** links a **`user`** to a **`project`** through `user_id` and `project_code`.

### **Key Tasks the LLM Can Query**:

1. **Clocking Report for a User**: Calculate how many hours a specific user has clocked, categorized by clocking categories (100, 200, 300, 400).
   
2. **Top 5 Overclocking & Underclocking**: Identify the top 5 users with the most and least clocking hours, showing the category details for each user.

3. **Efficiency Analysis for a User**: Analyze if a user’s activities for a specific month (e.g., March) are efficient based on their clocking targets.

4. **Analysis of a User Over Multiple Months**: Compare a user’s clocking activity from January to March against monthly targets to see if they met their goals.

5. **Monthly Clocking Graph**: Generate a graph showing clocking activity per month for a user, filtered by a specific clocking category (e.g., Category 400).

6. **Project Team Clocking Report**: Generate a report showing the clocking activities for all members of a project team (e.g., PM team), including details about overclocking and underclocking.

### **Conclusion**:

This schema provides the necessary data to generate detailed clocking reports and analysis. The LLM can use this context to query the database and generate reports based on user clocking activities, project involvement, and efficiency.
"""

# Saving the schema context as a text file
text_file_path = '/mnt/data/clocking_reports_schema_context.txt'

with open(text_file_path, 'w') as file:
    file.write(schema_context_text)

text_file_path

Analyzed
python
Always show details

Copy
# Rewriting the schema context and exporting it to a text file.

schema_context_text = """
### Database Context for LLM:

This database contains information about users, projects, daily activities, clocking activities, and their relationships. Here’s how each part works:

1. **Enums**:
    - **`daily_activities_priority_enum`**: Represents the priority level of a daily activity. The possible values are:
        - **High**: High priority
        - **Medium**: Medium priority
        - **Low**: Low priority
    - **`daily_activities_activity_type_enum`**: Describes the type of activity. The values are:
        - **Office**: Activity done in the office
        - **Onsite**: Activity done at a client’s location
        - **Remote**: Activity done remotely (e.g., work-from-home)
    - **`projects_status_enum`**: Represents the status of a project. The possible values are:
        - **initial**: Project is in the planning phase
        - **progress**: Project is currently being worked on
        - **finished**: Project has been completed
        - **cancelled**: Project has been cancelled

2. **Tables and Relationships**:

    - **`users`**: Stores information about users who are part of the company. This includes:
        - `user_id`: Unique identifier for each user.
        - `user_key`: A key to uniquely identify the user.
        - `full_name`: The user’s full name.
        - `email`: The user’s email address.
        - `position`: The user’s position within the company.
        - `created_at`, `updated_at`: Timestamps for when the user was created and last updated.

    - **`category_clocking`**: Contains the types of clocking categories for activities. Each category has:
        - `category_id`: Unique identifier for each category.
        - `category_description`: A description of the category.
        - `is_productive`, `is_billable`, `is_used`: Flags indicating whether the category is productive, billable, and used in the system.

    - **`daily_activities`**: Tracks the daily activities for users. Key fields include:
        - `daily_activity_id`: Unique identifier for the daily activity.
        - `project_code`: Links the activity to a project.
        - `activity_date`: The date the activity took place.
        - `priority`: The priority of the activity.
        - `activity_type`: The type of activity (e.g., office, onsite, remote).
        - `description`: A description of the activity.
        - `activity_duration_minutes`: The total duration of the activity in minutes.
        - `user_id`: Links the activity to the user who performed it.

    - **`clocking_activities`**: Stores detailed information about each clocking activity for a user:
        - `activity_id`: Unique identifier for each clocking activity.
        - `daily_activity_id`: Links the clocking activity to a daily activity.
        - `task_id`: Identifies the specific task being clocked.
        - `activity_description`: Description of the task or activity.
        - `duration_minutes`: Duration of the activity in minutes.
        - `start_date`, `start_time`: When the activity started.
        - `end_date`, `end_time`: When the activity ended.
        - `category_id`: Links the activity to a clocking category.

    - **`projects`**: Contains details about projects. Key fields include:
        - `project_code`: Unique identifier for the project.
        - `project_name`: Name of the project.
        - `customer_name`: The client for the project.
        - `project_manager_id`: The user assigned as the project manager.
        - `status`: The status of the project (e.g., initial, progress, finished, cancelled).

    - **`project_users`**: Links users to projects. This table is necessary for associating users with specific projects:
        - `project_code`: Links the user to a specific project.
        - `user_id`: The user assigned to the project.

3. **Foreign Key Relationships**:
    - Each **`daily_activity`** is linked to a **`user`** via `user_id`.
    - Each **`clocking_activity`** is linked to a **`daily_activity`** via `daily_activity_id`, and to a **`category_clocking`** via `category_id`.
    - Each **`project_user`** links a **`user`** to a **`project`** through `user_id` and `project_code`.

### **Key Tasks the LLM Can Query**:

1. **Clocking Report for a User**: Calculate how many hours a specific user has clocked, categorized by clocking categories (100, 200, 300, 400).
   
2. **Top 5 Overclocking & Underclocking**: Identify the top 5 users with the most and least clocking hours, showing the category details for each user.

3. **Efficiency Analysis for a User**: Analyze if a user’s activities for a specific month (e.g., March) are efficient based on their clocking targets.

4. **Analysis of a User Over Multiple Months**: Compare a user’s clocking activity from January to March against monthly targets to see if they met their goals.

5. **Monthly Clocking Graph**: Generate a graph showing clocking activity per month for a user, filtered by a specific clocking category (e.g., Category 400).

6. **Project Team Clocking Report**: Generate a report showing the clocking activities for all members of a project team (e.g., PM team), including details about overclocking and underclocking.

### **Conclusion**:

This schema provides the necessary data to generate detailed clocking reports and analysis. The LLM can use this context to query the database and generate reports based on user clocking activities, project involvement, and efficiency.
